[{"/home/jaea/Programacion/JS/mern-memories-app/client/src/index.js":"1","/home/jaea/Programacion/JS/mern-memories-app/client/src/App.js":"2","/home/jaea/Programacion/JS/mern-memories-app/client/src/reportWebVitals.js":"3","/home/jaea/Programacion/JS/mern-memories-app/client/src/components/Form/Form.js":"4","/home/jaea/Programacion/JS/mern-memories-app/client/src/components/Posts/Posts.js":"5","/home/jaea/Programacion/JS/mern-memories-app/client/src/styles.js":"6","/home/jaea/Programacion/JS/mern-memories-app/client/src/components/Form/styles.js":"7","/home/jaea/Programacion/JS/mern-memories-app/client/src/components/Posts/styles.js":"8","/home/jaea/Programacion/JS/mern-memories-app/client/src/api/index.js":"9","/home/jaea/Programacion/JS/mern-memories-app/client/src/reducers/index.js":"10","/home/jaea/Programacion/JS/mern-memories-app/client/src/reducers/posts.js":"11","/home/jaea/Programacion/JS/mern-memories-app/client/src/actions/posts.js":"12","/home/jaea/Programacion/JS/mern-memories-app/client/src/components/Posts/Post/Post.js":"13","/home/jaea/Programacion/JS/mern-memories-app/client/src/components/Posts/Post/styles.js":"14","/home/jaea/Programacion/JS/mern-memories-app/client/src/reducers/currentId.js":"15","/home/jaea/Programacion/JS/mern-memories-app/client/src/actions/currentId.js":"16","/home/jaea/Programacion/JS/mern-memories-app/client/src/constants/actionTypes.js":"17","/home/jaea/Programacion/JS/mern-memories-app/client/src/components/NavBar/NavBar.js":"18","/home/jaea/Programacion/JS/mern-memories-app/client/src/components/NavBar/styles.js":"19","/home/jaea/Programacion/JS/mern-memories-app/client/src/components/Home/Home.js":"20","/home/jaea/Programacion/JS/mern-memories-app/client/src/components/Home/styles.js":"21","/home/jaea/Programacion/JS/mern-memories-app/client/src/components/Auth/Auth.js":"22","/home/jaea/Programacion/JS/mern-memories-app/client/src/components/Auth/styles.js":"23","/home/jaea/Programacion/JS/mern-memories-app/client/src/components/Auth/Input.js":"24","/home/jaea/Programacion/JS/mern-memories-app/client/src/components/Auth/icon.js":"25","/home/jaea/Programacion/JS/mern-memories-app/client/src/reducers/auth.js":"26","/home/jaea/Programacion/JS/mern-memories-app/client/src/actions/auth.js":"27","/home/jaea/Programacion/JS/mern-memories-app/client/src/constants/keys.js":"28","/home/jaea/Programacion/JS/mern-memories-app/client/src/components/Posts/Post/Likes.js":"29"},{"size":787,"mtime":1611412154840,"results":"30","hashOfConfig":"31"},{"size":728,"mtime":1611499532625,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":1611397000875,"results":"33","hashOfConfig":"31"},{"size":5921,"mtime":1611674497210,"results":"34","hashOfConfig":"31"},{"size":1133,"mtime":1611527961926,"results":"35","hashOfConfig":"31"},{"size":103,"mtime":1611498616663,"results":"36","hashOfConfig":"31"},{"size":424,"mtime":1611406434938,"results":"37","hashOfConfig":"31"},{"size":265,"mtime":1611406472274,"results":"38","hashOfConfig":"31"},{"size":1559,"mtime":1611668389029,"results":"39","hashOfConfig":"31"},{"size":234,"mtime":1611514583647,"results":"40","hashOfConfig":"31"},{"size":628,"mtime":1611442338543,"results":"41","hashOfConfig":"31"},{"size":1339,"mtime":1611611902269,"results":"42","hashOfConfig":"31"},{"size":3541,"mtime":1611675574289,"results":"43","hashOfConfig":"31"},{"size":1136,"mtime":1611675204566,"results":"44","hashOfConfig":"31"},{"size":277,"mtime":1611442574114,"results":"45","hashOfConfig":"31"},{"size":153,"mtime":1611442352387,"results":"46","hashOfConfig":"31"},{"size":408,"mtime":1611573914333,"results":"47","hashOfConfig":"31"},{"size":4001,"mtime":1611677152160,"results":"48","hashOfConfig":"31"},{"size":1342,"mtime":1611524068879,"results":"49","hashOfConfig":"31"},{"size":1008,"mtime":1611499314005,"results":"50","hashOfConfig":"31"},{"size":212,"mtime":1611498622039,"results":"51","hashOfConfig":"31"},{"size":5748,"mtime":1611662689709,"results":"52","hashOfConfig":"31"},{"size":741,"mtime":1611598313231,"results":"53","hashOfConfig":"31"},{"size":1222,"mtime":1611513938205,"results":"54","hashOfConfig":"31"},{"size":502,"mtime":1611508667928,"results":"55","hashOfConfig":"31"},{"size":731,"mtime":1611662777501,"results":"56","hashOfConfig":"31"},{"size":995,"mtime":1611656715357,"results":"57","hashOfConfig":"31"},{"size":82,"mtime":1611518725906,"results":"58","hashOfConfig":"31"},{"size":722,"mtime":1611672495091,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1vm9fyd",{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"/home/jaea/Programacion/JS/mern-memories-app/client/src/index.js",[],["124","125"],"/home/jaea/Programacion/JS/mern-memories-app/client/src/App.js",["126"],"import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { Container } from '@material-ui/core';\n\nimport NavBar from './components/NavBar/NavBar';\nimport Home from './components/Home/Home';\nimport Auth from './components/Auth/Auth';\nimport useStyles from './styles';\nimport './index.css';\n\nfunction App() {\n  const classes = useStyles();\n  \n  return (\n    <div className='app'>\n      <BrowserRouter>\n        <Container maxwidth='lg'>\n          <NavBar />\n          <Switch>\n            <Route path='/' exact component={Home}/>\n            <Route path='/auth' exact component={Auth}/>\n          </Switch>\n        </Container>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;","/home/jaea/Programacion/JS/mern-memories-app/client/src/reportWebVitals.js",[],"/home/jaea/Programacion/JS/mern-memories-app/client/src/components/Form/Form.js",["127"],"import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport 'react-jsx-html-comments'\n\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\nimport { setCurrentId } from '../../actions/currentId';\nimport { POST_FORM_ID, LOCALSTORAGE_KEY } from '../../constants/keys';\n\n\nconst Form = () => {\n    \n    const currentId = useSelector((state) => state.currentId);\n    const post = useSelector((state) => currentId? state.posts.filter((post) => post._id === currentId)[0]:null);\n    const authState = useSelector((state) => state.auth);\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem(LOCALSTORAGE_KEY))?.user);\n\n    const [postData, setPostData] = useState({\n        creatorName: user?.name,\n        title: '',\n        message: '',\n        tags: [],\n        selectedFile: '',\n    })\n    const location = useLocation();\n    const dispatch = useDispatch();\n    const classes = useStyles();\n\n    useEffect(() => {\n        let user_ = JSON.parse(localStorage.getItem(LOCALSTORAGE_KEY))?.user;\n        setUser(user_);\n        if(!user_){\n            console.log('Not auth');\n            setPostData({\n                creatorName: '',\n                title: '',\n                message: '',\n                tags: [],\n                selectedFile: '',\n            })\n        }\n        else if(post) {\n            setPostData({\n                creatorName: post.creatorName,\n                title: post.title,\n                message: post.message,\n                tags: post.tags,\n                selectedFile: post.selectedFile,\n            })\n        }    \n    }, [location, currentId, post]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (currentId){\n            dispatch(updatePost(currentId, {...postData, creatorName: user?.name}))\n        }else{    \n            dispatch(createPost({...postData, creatorName: user?.name}));\n        }\n        clear();    \n    }\n\n    const clear = () => {\n        \n        dispatch(setCurrentId(null));\n        \n        setPostData({\n            creatorName: user? user.name : '',\n            title: '',\n            message: '',\n            tags: [],\n            selectedFile: '',\n        })\n        \n    }\n\n    if (!user){\n        return(\n            <Paper className={classes.paper}>\n                <Typography variant=\"h6\" align='center'>\n                    Please Sign In to create your own memories and like other's memories.\n                </Typography>\n            </Paper>\n        )\n    }\n    return (\n        <div id={POST_FORM_ID} className=\"form\">\n            <Paper className={classes.paper}>\n                <form autoComplete='off' noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n                    <Typography \n                        variant=\"h6\"\n                    >\n                    {currentId? 'Editing a Memory' :  'Creating a Memory'}\n                    </Typography>\n                    <react-comment>\n                        <TextField \n                            name=\"creatorName\" \n                            variant=\"outlined\" \n                            label=\"Creator name\" \n                            fullWidth \n                            value={postData.creatorName}\n                            onChange={(e) => setPostData({...postData, creatorName: e.target.value})}\n                            disabled={user? true: false}\n                        />\n                    </react-comment>\n                    <TextField \n                        name=\"title\" \n                        variant=\"outlined\" \n                        label=\"Title\" \n                        fullWidth \n                        value={postData.title}\n                        onChange={(e) => setPostData({...postData, title: e.target.value})}\n                    />\n                    <TextField \n                        name=\"message\" \n                        variant=\"outlined\" \n                        label=\"Message\" \n                        fullWidth \n                        value={postData.message}\n                        onChange={(e) => setPostData({...postData, message: e.target.value})}\n                    />\n                     <TextField \n                        name=\"tags\" \n                        variant=\"outlined\" \n                        label=\"Tags\" \n                        fullWidth \n                        value={postData.tags.join(',')}\n                        onChange={(e) => setPostData({...postData, tags: e.target.value.replace(', ', ',').split(',')})}\n                    />\n                    <div className={classes.fileInput}>\n                        <FileBase\n                            type=\"file\"\n                            multiple={false}\n                            onDone={({base64}) => setPostData({...postData, selectedFile: base64})}\n                        />\n                    </div>   \n                    <Button\n                        className={classes.buttonSubmit}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        size=\"large\"\n                        type=\"submit\"\n                        fullWidth\n                    >\n                        Submit\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        size=\"small\"\n                        onClick={clear}\n                        fullWidth\n                    >\n                        Clear\n                    </Button>\n                </form>\n            </Paper>\n        </div>\n    )\n}\n\nexport default Form;","/home/jaea/Programacion/JS/mern-memories-app/client/src/components/Posts/Posts.js",[],"/home/jaea/Programacion/JS/mern-memories-app/client/src/styles.js",[],"/home/jaea/Programacion/JS/mern-memories-app/client/src/components/Form/styles.js",[],"/home/jaea/Programacion/JS/mern-memories-app/client/src/components/Posts/styles.js",[],"/home/jaea/Programacion/JS/mern-memories-app/client/src/api/index.js",[],"/home/jaea/Programacion/JS/mern-memories-app/client/src/reducers/index.js",[],"/home/jaea/Programacion/JS/mern-memories-app/client/src/reducers/posts.js",[],"/home/jaea/Programacion/JS/mern-memories-app/client/src/actions/posts.js",[],"/home/jaea/Programacion/JS/mern-memories-app/client/src/components/Posts/Post/Post.js",["128","129"],"import React, {useEffect} from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core';\n\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport moment from 'moment';\n\nimport Likes from './Likes';\nimport useStyles from './styles';\nimport { deletePost, likePost } from '../../../actions/posts';\nimport { setCurrentId } from '../../../actions/currentId';\nimport { POST_FORM_ID } from '../../../constants/keys';\nimport { LOCALSTORAGE_KEY } from '../../../constants/keys';\nimport noImage from '../../../images/no-image.png';\n\n\nconst Post = ({ post }) => {\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const classes = useStyles();\n    const user = JSON.parse(localStorage.getItem(LOCALSTORAGE_KEY))?.user;\n    \n    const handleEdit = () => {\n        dispatch(setCurrentId(post._id));\n        window.location.hash = `${POST_FORM_ID}`;\n    }\n    \n    return (\n        <div className=\"post\">\n            <Card className={classes.card}>\n                <CardMedia \n                    className={classes.media}\n                    image={post.selectedFile || noImage}\n                    title={post.title}\n                />\n            <div className={classes.overlay}>\n                <Typography variant=\"h6\">\n                    {post.creatorName}\n                </Typography>\n                <Typography variant=\"body2\">\n                    {moment(post.createdAt).fromNow()}\n                </Typography>\n            </div>\n            {\n                (user && (user._id || user.googleId) === post.creator) && (\n                <div className={classes.overlay2}>\n                    <Button \n                        style={{color: 'white', minWidth:'auto'}} \n                        size='small'\n                        disabled={!user || (user._id || user.googleId) !== post.creator}\n                        onClick={handleEdit}\n                    >\n                        <MoreHorizIcon fontSize=\"default\" />\n                    </Button>\n                </div>\n                )}\n            <div className={classes.details}>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                    {post.tags.map(((tag, i) => <div key={i} className={classes.tag}>{`#${tag} `}</div>))}\n                </Typography>\n            </div>\n            <Typography className={classes.title} variant=\"h5\" gutterBottom>\n                    {post.title}\n                </Typography>\n            <CardContent>\n                <Typography className={classes.message} variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {post.message}\n                </Typography>\n            </CardContent>\n            <CardActions className={classes.cardActions}>\n                <Button size=\"small\" disabled={!user} color=\"primary\" onClick={() => {dispatch(likePost(post._id))}}>\n                    <Likes likes={post.likes} user={user} />\n                </Button>\n                {\n                    (user && (user._id || user.googleId) === post.creator) && (\n                <Button size=\"small\" color=\"primary\" onClick={() => {dispatch(deletePost(post._id))}}>\n                    <DeleteIcon fontSize=\"small\"/>\n                    &nbsp; Delete \n                </Button>\n                )}\n            </CardActions>\n            </Card> \n        </div>\n    )\n}\n\nexport default Post;","/home/jaea/Programacion/JS/mern-memories-app/client/src/components/Posts/Post/styles.js",[],"/home/jaea/Programacion/JS/mern-memories-app/client/src/reducers/currentId.js",[],"/home/jaea/Programacion/JS/mern-memories-app/client/src/actions/currentId.js",[],"/home/jaea/Programacion/JS/mern-memories-app/client/src/constants/actionTypes.js",[],"/home/jaea/Programacion/JS/mern-memories-app/client/src/components/NavBar/NavBar.js",["130"],"import React, { useState, useEffect } from 'react';\nimport { AppBar, Typography, Toolbar, Button, Avatar } from '@material-ui/core';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport decode from 'jwt-decode';\n\nimport memories from '../../images/memories.png';\nimport { LOCALSTORAGE_KEY } from '../../constants/keys';\nimport { logout } from '../../actions/auth';\nimport useStyles from './styles';\n\nconst NavBar = () => {\n    \n    const [auth, setAuth] = useState(JSON.parse(localStorage.getItem(LOCALSTORAGE_KEY)));\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const location = useLocation();\n    const classes = useStyles();\n    \n    useEffect(() => {\n        console.log('navbar useEffect');\n        const token = auth?.token;\n        if(token){\n            console.log(token)\n            const decodedToken = decode(token);\n            console.log(decodedToken)\n            console.log(decodedToken.exp * 1000);\n            console.log(new Date().getTime());\n            if(decodedToken.exp * 1000 < new Date().getTime()){\n                handleLogout()\n            }\n        }\n        setAuth(JSON.parse(localStorage.getItem(LOCALSTORAGE_KEY)));\n    },[location]);\n\n    const getShortName = (name) => {\n        let parts = name.split(' ');\n        if (parts.length >= 2){\n            return `${parts[0]} ${parts[1]}`;\n        }\n        else{\n            return name;\n        }\n    }\n\n    const handleLogout = () => {\n        dispatch(logout());\n        history.push('/');\n        setAuth(null);\n    }\n\n    const handleClickLogout = (e) => {\n        e.preventDefault();\n        handleLogout();\n    }\n\n    return (\n        <div className='navBar'>\n            <AppBar className={classes.appBar}  position=\"static\" color=\"inherit\">\n                <div className={classes.brandContainer}> \n                    <Typography \n                        component={Link} \n                        to='/' \n                        className={classes.heading} \n                        variant=\"h2\" \n                        align=\"center\"\n                        >\n                            Memories\n                        </Typography>\n                    <img className={classes.image} src={memories} alt=\"memories\" height=\"60\" />\n                </div>\n                <Toolbar className={classes.toolBar} >\n                    {auth? (\n                        <div className={classes.profile}>\n                            <Avatar \n                                className={classes.purple} \n                                alt={auth.user.name} src={auth.user.imageUrl}\n                            >\n                                {auth.user.name.charAt(0)}\n                            </Avatar>\n                            <Typography\n                                className={classes.username}\n                                variant='h6'\n                            >\n                                {getShortName(auth.user.name)}        \n                            </Typography>\n                            <Button\n                                variant='contained'\n                                className={classes.logout}\n                                color=\"secondary\"\n                                onClick={handleClickLogout}\n                            >\n                                Logout\n                            </Button>\n                        </div>\n                    ) : (\n                        <Button\n                            component={Link}\n                            to='/auth'\n                            variant='contained'\n                            className={classes.logout}\n                            color=\"primary\"\n                           \n                        >\n                            Sign In\n                        </Button>\n                    )}\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}\n\nexport default NavBar\n","/home/jaea/Programacion/JS/mern-memories-app/client/src/components/NavBar/styles.js",[],"/home/jaea/Programacion/JS/mern-memories-app/client/src/components/Home/Home.js",[],"/home/jaea/Programacion/JS/mern-memories-app/client/src/components/Home/styles.js",[],"/home/jaea/Programacion/JS/mern-memories-app/client/src/components/Auth/Auth.js",["131"],"import React, { useState } from 'react';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { GoogleLogin } from 'react-google-login';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport { auth, signUp, signIn } from '../../actions/auth';\nimport Input from './Input';\nimport Icon from './icon';\nimport useStyles from './styles';\n\nconst initialState = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n}\n\nconst Auth = () => {\n    \n    const [showPassword, setShowPassword] = useState(false);\n    const [isSignUp, setIsSignUp] = useState(false); //%\n    const [formData, setFormData] = useState(initialState);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const state = null; //%\n    const classes = useStyles();\n    \n    \n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(isSignUp){\n            if (formData.password === formData.confirmPassword){\n                dispatch(signUp(formData, history));\n            }else{\n                alert(\"The passwords don't match!\");\n            }    \n        }else{\n            dispatch(signIn(formData, history));\n        }\n    }\n    const handleChange = (e) => {\n        setFormData({...formData, [e.target.name]: e.target.value})\n    }\n    const handleShowPassword = () => setShowPassword((prevShowPassword) => !prevShowPassword)\n    const switchMode = () => {\n        setIsSignUp((prevIsSignUp) => !prevIsSignUp);\n        setShowPassword(false);\n    }\n\n    const googleSuccess = async (res) => {\n        const user = res?.profileObj;\n        const token = res?.tokenId;\n        try{\n            dispatch(auth({ user, token }));\n            history.push('/');\n        }\n        catch(error){\n            console.log(error);\n        }\n\n    }\n    const googleFailure = (error) => {\n        console.log(error);\n        console.log('Google Sign In was unsuccessful. Try again later')\n    }\n\n    return (\n        <div className=\"auth\">\n            <Container component=\"main\" maxWidth=\"xs\">\n                <Paper className={classes.paper} elevation={3}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant='h5'>\n                        {isSignUp? 'Sign Up' : 'Sign In'}\n                    </Typography>\n                    <form\n                        className={classes.form}\n                        onSubmit={handleSubmit}\n                    >\n                        <Grid container spacing={2}>\n                            {\n                                isSignUp && (\n                                    <>\n                                        <Input \n                                            name=\"firstName\" \n                                            label=\"First Name\" \n                                            handleChange={handleChange}\n                                            autoFocus\n                                            half\n                                        />\n                                        <Input name=\"lastName\" label=\"Last Name\" handleChange={handleChange} half />\n                                    </>\n                            )}    \n                            <Input type=\"email\" name=\"email\" label=\"Email Address\"  handleChange={handleChange} />\n                            <Input type={showPassword ? 'text' : 'password'} name=\"password\" label=\"Password\" handleChange={handleChange} handleShowPassword={handleShowPassword} />\n                            { isSignUp && <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type={showPassword ? 'text' : 'password'} />}\n                        </Grid>\n                        <Button type='submit' fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\n                            {isSignUp? 'Sign Up' : 'Sign In'}\n                        </Button>{\n                        <GoogleLogin\n                            clientId={process.env.REACT_APP_GOOGLE_ID}\n                            render={(renderProps) => (\n                                <Button \n                                    className={classes.googleButton} \n                                    color=\"primary\" \n                                    fullWidth \n                                    onClick={renderProps.onClick}\n                                    disabled={renderProps.disabled}\n                                    startIcon={<Icon />}\n                                    variant=\"contained\"\n                                >\n                                    Google Sign In\n                                </Button>\n                            )}\n                            onSuccess={googleSuccess}\n                            onFailure={googleFailure}\n                            cookiePolicy=\"single_host_origin\"\n                        />}\n                        <Grid container justify='flex-end'>\n                            <Grid item>\n                                <Button className={isSignUp? classes.switchModeSignIn : classes.switchModeSignUp} onClick={switchMode}  fullWidth variant=\"contained\">\n                                    { isSignUp ? 'Already have an account? Sign In' : \"Don't have an account? Sign Up\"}\n                                </Button>        \n                            </Grid>\n                        </Grid>\n                    </form>\n                </Paper>\n            </Container>\n            </div>\n    )\n}\n\nexport default Auth;","/home/jaea/Programacion/JS/mern-memories-app/client/src/components/Auth/styles.js",[],"/home/jaea/Programacion/JS/mern-memories-app/client/src/components/Auth/Input.js",[],"/home/jaea/Programacion/JS/mern-memories-app/client/src/components/Auth/icon.js",[],"/home/jaea/Programacion/JS/mern-memories-app/client/src/reducers/auth.js",[],"/home/jaea/Programacion/JS/mern-memories-app/client/src/actions/auth.js",[],"/home/jaea/Programacion/JS/mern-memories-app/client/src/constants/keys.js",[],"/home/jaea/Programacion/JS/mern-memories-app/client/src/components/Posts/Post/Likes.js",[],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":12,"column":9,"nodeType":"138","messageId":"139","endLine":12,"endColumn":16},{"ruleId":"136","severity":1,"message":"140","line":19,"column":11,"nodeType":"138","messageId":"139","endLine":19,"endColumn":20},{"ruleId":"136","severity":1,"message":"141","line":1,"column":16,"nodeType":"138","messageId":"139","endLine":1,"endColumn":25},{"ruleId":"136","severity":1,"message":"142","line":22,"column":11,"nodeType":"138","messageId":"139","endLine":22,"endColumn":18},{"ruleId":"143","severity":1,"message":"144","line":34,"column":7,"nodeType":"145","endLine":34,"endColumn":17,"suggestions":"146"},{"ruleId":"136","severity":1,"message":"147","line":28,"column":11,"nodeType":"138","messageId":"139","endLine":28,"endColumn":16},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","'authState' is assigned a value but never used.","'useEffect' is defined but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'auth?.token' and 'handleLogout'. Either include them or remove the dependency array.","ArrayExpression",["150"],"'state' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"151","fix":"152"},"Update the dependencies array to be: [auth?.token, handleLogout, location]",{"range":"153","text":"154"},[1250,1260],"[auth?.token, handleLogout, location]"]